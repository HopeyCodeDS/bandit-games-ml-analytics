image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_REGISTRY: docker.io
  PREDICTION_IMAGE: opeyemimomodu/prediction-api
  STATS_API_IMAGE: opeyemimomodu/statistics-api
  STATS_DB_IMAGE: opeyemimomodu/statistics-db
  ANALYTICS_CONSUMER_IMAGE: opeyemimomodu/analytics-consumer

stages:
  - build
  - deploy

before_script:
  - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD

# Build Jobs
build_prediction_api:
  stage: build
  script:
    - docker build -t $PREDICTION_IMAGE:$CI_COMMIT_SHA -f PredictionSystem/Dockerfile PredictionSystem
    - docker tag $PREDICTION_IMAGE:$CI_COMMIT_SHA $PREDICTION_IMAGE:latest
    - docker push $PREDICTION_IMAGE:$CI_COMMIT_SHA
    - docker push $PREDICTION_IMAGE:latest
  only:
    changes:
      - PredictionSystem/**/*
      - .gitlab-ci.yml


build_stats_api:
  stage: build
  script:
    - docker build -t $STATS_API_IMAGE:$CI_COMMIT_SHA -f GameAnalytics/Dockerfile GameAnalytics
    - docker tag $STATS_API_IMAGE:$CI_COMMIT_SHA $STATS_API_IMAGE:latest
    - docker push $STATS_API_IMAGE:$CI_COMMIT_SHA
    - docker push $STATS_API_IMAGE:latest
  only:
    changes:
      - GameAnalytics/**/*
      - .gitlab-ci.yml


build_stats_db:
  stage: build
  script:
    - docker build -t $STATS_DB_IMAGE:$CI_COMMIT_SHA -f game_analytics_docker/Dockerfile game_analytics_docker
    - docker tag $STATS_DB_IMAGE:$CI_COMMIT_SHA $STATS_DB_IMAGE:latest
    - docker push $STATS_DB_IMAGE:$CI_COMMIT_SHA
    - docker push $STATS_DB_IMAGE:latest
  only:
    changes:
      - game_analytics_docker/**/*
      - .gitlab-ci.yml


build_analytics_consumer:
  stage: build
  script:
    - docker build -t $ANALYTICS_CONSUMER_IMAGE:$CI_COMMIT_SHA -f communication/Dockerfile communication
    - docker tag $ANALYTICS_CONSUMER_IMAGE:$CI_COMMIT_SHA $ANALYTICS_CONSUMER_IMAGE:latest
    - docker push $ANALYTICS_CONSUMER_IMAGE:$CI_COMMIT_SHA
    - docker push $ANALYTICS_CONSUMER_IMAGE:latest
  only:
    changes:
      - communication/**/*
      - .gitlab-ci.yml


deploy:
  stage: deploy
  image: mcr.microsoft.com/azure-cli
  script:
    # Login to Azure
    - az login --service-principal -u $AZURE_SP_ID -p $AZURE_SP_PASSWORD --tenant $AZURE_TENANT_ID

    # Create resource group if it doesn't exist
    - az group create --name game-analytics-rg --location westeurope

    # Deploy using docker-compose
    - az container create 
        --resource-group game-analytics-rg 
        --name game-analytics-platform 
        --file docker-compose.yml 
        --dns-name-label game-analytics-platform 
        --ports 3309 8001 8002
  only:
    - main
  environment: production


#only:
#  - main
#  - deployment