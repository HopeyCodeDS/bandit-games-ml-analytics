image: docker:latest

services:
  - docker:dind

variables:
  # Docker Hub images
  DOCKER_HUB_USER: opeyemimomodu
  STATS_DB_IMAGE: ${DOCKER_HUB_USER}/statistics-db
  STATS_API_IMAGE: ${DOCKER_HUB_USER}/statistics-api
  PREDICTION_IMAGE: ${DOCKER_HUB_USER}/prediction-api
  ANALYTICS_CONSUMER_IMAGE: ${DOCKER_HUB_USER}/analytics-consumer

  # Azure credentials
  AZURE_SP_ID: $AZURE_SP_ID
  AZURE_SP_PASSWORD: $AZURE_SP_PASSWORD
  AZURE_TENANT_ID: $AZURE_TENANT_ID
  DB_ROOT_PASSWORD: $DB_ROOT_PASSWORD

stages:
  - build
  - deploy

# Build jobs with Docker login
.build_template: &build_definition
  stage: build
  before_script:
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USER" --password-stdin
  only:
    - main

build_stats_db:
  <<: *build_definition
  script:
    - docker build -t $STATS_DB_IMAGE:$CI_COMMIT_SHA -f game_analytics_docker/Dockerfile game_analytics_docker
#    - docker tag $STATS_DB_IMAGE:$CI_COMMIT_SHA $STATS_DB_IMAGE:latest
    - docker push $STATS_DB_IMAGE:$CI_COMMIT_SHA
#    - docker push $STATS_DB_IMAGE:latest

build_stats_api:
  <<: *build_definition
  script:
    - docker build -t $STATS_API_IMAGE:$CI_COMMIT_SHA -f GameAnalytics/Dockerfile GameAnalytics
#    - docker tag $STATS_API_IMAGE:$CI_COMMIT_SHA $STATS_API_IMAGE:latest
    - docker push $STATS_API_IMAGE:$CI_COMMIT_SHA
#    - docker push $STATS_API_IMAGE:latest

build_prediction_api:
  <<: *build_definition
  script:
    - docker build -t $PREDICTION_IMAGE:$CI_COMMIT_SHA -f PredictionSystem/Dockerfile PredictionSystem
#    - docker tag $PREDICTION_IMAGE:$CI_COMMIT_SHA $PREDICTION_IMAGE:latest
    - docker push $PREDICTION_IMAGE:$CI_COMMIT_SHA
#    - docker push $PREDICTION_IMAGE:latest

build_analytics_consumer:
  <<: *build_definition
  script:
    - docker build -t $ANALYTICS_CONSUMER_IMAGE:$CI_COMMIT_SHA -f communication/Dockerfile communication
#    - docker tag $ANALYTICS_CONSUMER_IMAGE:$CI_COMMIT_SHA $ANALYTICS_CONSUMER_IMAGE:latest
    - docker push $ANALYTICS_CONSUMER_IMAGE:$CI_COMMIT_SHA
#    - docker push $ANALYTICS_CONSUMER_IMAGE:latest


# Deploy to Azure
# Deploy job without Docker login
deploy:
  stage: deploy
  image: mcr.microsoft.com/azure-cli
  script:
    - echo "Starting deployment to Azure..."

    # Azure Login
    - az login --service-principal -u "$AZURE_SP_ID" -p "$AZURE_SP_PASSWORD" --tenant "$AZURE_TENANT_ID"

    # Register Container Instance provider
    - echo "Registering Container Instance provider..."
    - az provider register --namespace Microsoft.ContainerInstance

    # Create resource group
    - az group create --name game-analytics-rg --location westeurope

    # Define container group configuration in JSON
    - cat <<EOF > container-group.json
    {
      "name": "game-analytics-platform",
      "location": "westeurope",
      "properties": {
        "containers": [
          {
            "name": "stats-db",
            "properties": {
              "image": "$STATS_DB_IMAGE:$CI_COMMIT_SHA",
              "resources": {
                "requests": {
                  "memoryInGb": 1.5,
                  "cpu": 1
                }
              },
              "environmentVariables": [
                {
                  "name": "MYSQL_DATABASE",
                  "value": "platform_analytics"
                },
                {
                  "name": "MYSQL_ROOT_PASSWORD",
                  "value": "$DB_ROOT_PASSWORD"
                }
              ],
              "ports": [
                {
                  "port": 3309
                }
              ]
            }
          },
          {
            "name": "stats-api",
            "properties": {
              "image": "$STATS_API_IMAGE:$CI_COMMIT_SHA",
              "resources": {
                "requests": {
                  "memoryInGb": 1.5,
                  "cpu": 1
                }
              },
              "ports": [
                {
                  "port": 8001
                }
              ]
            }
          },
          {
            "name": "prediction-api",
            "properties": {
              "image": "$PREDICTION_IMAGE:$CI_COMMIT_SHA",
              "resources": {
                "requests": {
                  "memoryInGb": 1.5,
                  "cpu": 1
                }
              },
              "ports": [
                {
                  "port": 8002
                }
              ]
            }
          },
          {
            "name": "analytics-consumer",
            "properties": {
              "image": "$ANALYTICS_CONSUMER_IMAGE:$CI_COMMIT_SHA",
              "resources": {
                "requests": {
                  "memoryInGb": 1.5,
                  "cpu": 1
                }
              }
            }
          }
        ],
        "osType": "Linux",
        "ipAddress": {
          "type": "Public",
          "dnsNameLabel": "game-analytics-platform",
          "ports": [
            {
              "port": 3309,
              "protocol": "TCP"
            },
            {
              "port": 8001,
              "protocol": "TCP"
            },
            {
              "port": 8002,
              "protocol": "TCP"
            }
          ]
        }
      }
    }
    EOF

    # Deploy container group using JSON file
    - az container create --resource-group game-analytics-rg --file container-group.json

  needs:
    - build_stats_db
    - build_stats_api
    - build_prediction_api
    - build_analytics_consumer
  only:
    - main
  environment: production
